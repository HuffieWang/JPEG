#ifndef __JPEG_DATA_H
#define __JPEG_DATA_H
#include "stdint.h"

uint16_t test_image[8][8] =
{
    {58319,56206,51981,47755,47755,43465,43531,43531},
    {58319,56206,51981,47755,47755,43465,43531,43531},
    {56271,54094,51980,47754,45642,41417,41418,43467},
    {56207,54093,49868,45642,45642,41352,41418,41418},
    {56206,54093,49868,45642,45642,41352,41418,41418},
    {54158,54093,49868,47754,45642,41417,41418,41418},
    {54158,54093,49868,47754,45642,41417,41418,41418},
    {54094,52045,49932,47755,45643,41417,41418,43466}
};

const float bright_code[8][8] = 
{
    {16,11,10,16,24,40,51,61},
    {12,12,14,19,26,58,60,55},
    {14,13,16,24,40,57,69,56},
    {14,17,22,29,51,89,80,62},
    {18,22,37,56,68,109,103,77},
    {24,35,55,64,81,104,113,92},
    {49,64,78,87,103,121,120,101},
    {72,92,95,98,112,100,103,99}
};
const float color_code[8][8] = 
{
    {17,18,24,47,99,99,99,99},
    {18,21,26,66,99,99,99,99},
    {24,26,56,99,99,99,99,99},
    {47,66,99,99,99,99,99,99}, 
    {99,99,99,99,99,99,99,99},
    {99,99,99,99,99,99,99,99},
    {99,99,99,99,99,99,99,99},
    {99,99,99,99,99,99,99,99}
};

const int8_t zigzag_code[8][8] = 
{
    {0,1,5,6,14,15,27,28},
    {2,4,7,13,16,26,29,42},
    {3,8,12,17,25,30,41,43},
    {9,11,18,24,31,40,44,53},
    {10,19,23,32,39,45,52,54},
    {20,22,33,38,46,51,55,60},
    {21,34,37,47,50,56,59,61},
    {35,36,48,49,57,58,62,63}   
};

const uint16_t huffman_dc_code[12][2] = 
{
    {2, 0},     //00 2  00
    {3, 2},     //01 3  010
    {3, 3},     //02 3  011
    {3, 4},     //03 3  100
    {3, 5},     //04 3  101
    {3, 6},     //05 3  110
    {4, 14},    //06 4  1110
    {5, 30},    //07 5  11110
    {6, 62},    //08 6  111110
    {7, 126},   //09 7  1111110
    {8, 254},   //10 8  11111110
    {9, 510}    //11 9  111111110 
};

const uint16_t huffman_ac_code[161][2] =
{
    {4, 10},    //  00 4  1010
    {2, 0},     //  01 2  00
    {2, 1},     //  02 2  01
    {3, 4},     //  03 3  100
    {4, 11},    //  04 4  1011
    {5, 26},    //  05 5  11010
    {7, 120},   //  06 7  1111000
    {8, 248},   //  07 8  11111000
    {10, 1014}, //  08 10 11111101 10
    {16, 65410},//  09 16 11111111 10000010
    {16, 65411},//  10 16 11111111 10000011
    {4, 12},    //  11 4  1100
    {5, 27},    //  12 5  11011
    {7, 121},   //  13 7  1111001
    {9, 502},   //  14 9  11111011 0
    {11, 2038}, //  15 11 11111110 110
    {16, 65412},//  16 16 11111111 10000100
    {16, 65413},//  17 16 11111111 10000101
    {16, 65414},//  18 16 11111111 10000110
    {16, 65415},//  19 16 11111111 10000111
    {16, 65416},//  20 16 11111111 10001000
    {5, 28},    //  21 5  11100
    {8, 249},   //  22 8  11111001
    {10, 1015}, //  23 10 11111101 11
    {12, 4084}, //  24 12 11111111 0100
    {16, 65417},//  25 16 11111111 10001001
    {16, 65418},//  26 16 11111111 10001010
    {16, 65419},//  27 16 11111111 10001011
    {16, 65420},//  28 16 11111111 10001100
    {16, 65421},//  29 16 11111111 10001101   
    {16, 65422},//  30 16 11111111 10001110
    {6, 58},    //  31 6  111010
    {9, 503},   //  32 9  11111011 1
    {12, 4085}, //  33 12 11111111 0101
    {16, 65423},//  34 16 11111111 10001111
    {16, 65424},//  35 16 11111111 10010000
    {16, 65425},//  36 16 11111111 10010001
    {16, 65426},//  37 16 11111111 10010010
    {16, 65427},//  38 16 11111111 10010011
    {16, 65428},//  39 16 11111111 10010100
    {16, 65429},//  40 16 11111111 10010101
    
    {6, 59},    //  41 6  111011
    {10, 1016}, //  42 10 11111110 00
    {16, 65430},//  43 16 11111111 10010110
    {16, 65431},//  44 16 11111111 10010111
    {16, 65432},//  45 16 11111111 10011000
    {16, 65433},//  46 16 11111111 10011001
    {16, 65434},//  47 16 11111111 10011010
    {16, 65435},//  48 16 11111111 10011011
    {16, 65436},//  49 16 11111111 10011100
    {16, 65437},//  50 16 11111111 10011101
    {7, 122},   //  51 7  1111010
    {11, 2039}, //  52 11 11111110 111
    {16, 65438},//  53 16 11111111 10011110
    {16, 65439},//  54 16 11111111 10011111
    {16, 65440},//  55 16 11111111 10100000
    {16, 65441},//  56 16 11111111 10100001
    {16, 65442},//  57 16 11111111 10100010
    {16, 65443},//  58 16 11111111 10100011
    {16, 65444},//  59 16 11111111 10100100  
    {16, 65445},//  60 16 11111111 10100101   
    {7, 123},   //  61 7  1111011
    {12, 4086}, //  62 12 11111111 0110
    {16, 65446},//  63 16 11111111 10100110
    {16, 65447},//  64 16 11111111 10100111
    {16, 65448},//  65 16 11111111 10101000
    {16, 65449},//  66 16 11111111 10101001
    {16, 65450},//  67 16 11111111 10101010
    {16, 65451},//  68 16 11111111 10101011
    {16, 65452},//  69 16 11111111 10101100
    {16, 65453},//  70 16 11111111 10101101
    {8, 250},   //  71 8  11111010
    {12, 4087}, //  72 12 11111111 0111
    {16, 65454},//  73 16 11111111 10101110
    {16, 65455},//  74 16 11111111 10101111
    {16, 65456},//  75 16 11111111 10110000
    {16, 65457},//  76 16 11111111 10110001
    {16, 65458},//  77 16 11111111 10110010
    {16, 65459},//  78 16 11111111 10110011
    {16, 65460},//  79 16 11111111 10110100
    {16, 65461},//  80 16 11111111 10110101
    
    {9, 504},   //  81 9  11111100 0
    {15, 32704},//  82 15 11111111 1000000
    {16, 65462},//  83 16 11111111 10110110
    {16, 65463},//  84 16 11111111 10110111
    {16, 65464},//  85 16 11111111 10111000
    {16, 65465},//  86 16 11111111 10111001
    {16, 65466},//  87 16 11111111 10111010
    {16, 65467},//  88 16 11111111 10111011
    {16, 65468},//  89 16 11111111 10111100   
    {16, 65469},//  90 16 11111111 10111101
    {9, 505},   //  91 9  11111100 1
    {16, 65470},//  92 16 11111111 10111110
    {16, 65471},//  93 16 11111111 10111111
    {16, 65472},//  94 16 11111111 11000000
    {16, 65473},//  95 16 11111111 11000001
    {16, 65474},//  96 16 11111111 11000010
    {16, 65475},//  97 16 11111111 11000011
    {16, 65476},//  98 16 11111111 11000100
    {16, 65477},//  99 16  11111111 11000101
    {16, 65478},//  100 16 11111111 11000110
    {9 , 506},  //  101 9  11111101 0
    {16, 65479},//  102 16 11111111 11000111
    {16, 65480},//  103 16 11111111 11001000
    {16, 65481},//  104 16 11111111 11001001
    {16, 65482},//  105 16 11111111 11001010
    {16, 65483},//  106 16 11111111 11001011
    {16, 65484},//  107 16 11111111 11001100
    {16, 65485},//  108 16 11111111 11001101
    {16, 65486},//  109 16 11111111 11001110
    {16, 65487},//  110 16 11111111 11001111
    {10, 1017}, //  111 10 11111110 01
    {16, 65488},//  112 16 11111111 11010000
    {16, 65489},//  113 16 11111111 11010001
    {16, 65490},//  114 16 11111111 11010010
    {16, 65491},//  115 16 11111111 11010011
    {16, 65492},//  116 16 11111111 11010100
    {16, 65493},//  117 16 11111111 11010101
    {16, 65494},//  118 16 11111111 11010110
    {16, 65495},//  119 16 11111111 11010111
    {16, 65496},//  120 16 11111111 11011000
    
    {10, 1018}, //  121 10 11111110 10
    {16, 65497},//  122 16 11111111 11011001
    {16, 65498},//  123 16 11111111 11011010
    {16, 65499},//  124 16 11111111 11011011
    {16, 65500},//  125 16 11111111 11011100
    {16, 65501},//  126 16 11111111 11011101
    {16, 65502},//  127 16 11111111 11011110
    {16, 65503},//  128 16 11111111 11011111
    {16, 65504},//  129 16 11111111 11100000
    {16, 65505},//  130 16 11111111 11100001
    {11, 2040}, //  131 11 11111111 000
    {16, 65506},//  132 16 11111111 11100010
    {16, 65507},//  133 16 11111111 11100011
    {16, 65508},//  134 16 11111111 11100100
    {16, 65509},//  135 16 11111111 11100101
    {16, 65510},//  136 16 11111111 11100110
    {16, 65511},//  137 16 11111111 11100111
    {16, 65512},//  138 16 11111111 11101000
    {16, 65513},//  139 16 11111111 11101001
    {16, 65514},//  140 16 11111111 11101010
    {16, 65515},//  141 16 11111111 11101011
    {16, 65516},//  142 16 11111111 11101100
    {16, 65517},//  143 16 11111111 11101101
    {16, 65518},//  144 16 11111111 11101110
    {16, 65519},//  145 16 11111111 11101111
    {16, 65520},//  146 16 11111111 11110000
    {16, 65521},//  147 16 11111111 11110001
    {16, 65522},//  148 16 11111111 11110010
    {16, 65523},//  149 16 11111111 11110011
    {16, 65524},//  150 16 11111111 11110100
    {16, 65525},//  151 16 11111111 11110101
    {16, 65526},//  152 16 11111111 11110110
    {16, 65527},//  153 16 11111111 11110111
    {16, 65528},//  154 16 11111111 11111000
    {16, 65529},//  155 16 11111111 11111001
    {16, 65530},//  156 16 11111111 11111010
    {16, 65531},//  157 16 11111111 11111011
    {16, 65532},//  158 16 11111111 11111100
    {16, 65533},//  159 16 11111111 11111101
    {16, 65534},//  160 16 11111111 11111110
};

//检查霍夫曼表是否准确
/*
void huffman_test(void)
{
    uint16_t i, j, n, temp, num;
    for(i = 0; i < 161; i++)
    {
        num = 0x0000;
        temp = huffman_ac_code[i][1]<<(16-huffman_ac_code[i][0]);
        for(j = 0; j < huffman_ac_code[i][0]; j++)
        {
            num<<=1;
            if(temp&0x8000)
            {
                num |= 0x0001;
                printf("%d", 1);
            }
            else
            {
                printf("%d", 0);
            }         
            temp<<=1;
            for(n = 0; n < 161; n++)
            {
                if(n != i && (j+1)==huffman_ac_code[n][0] && num == huffman_ac_code[n][1])
                {
                    printf("  出错！！！ %d  %d  ", i, n);
                }
            }
        }
        printf("\n");
    }
    printf("测试完毕\n");
}
*/

#endif
